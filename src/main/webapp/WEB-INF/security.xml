<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

    
    
    <http use-expressions="true">
        <intercept-url pattern="/users**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/account**" access="hasRole('PELOTUDO')" />
        <form-login login-page="/login.html" />
        <logout logout-url="/logout" />
    </http>

    
    <!--    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" /> 
            </user-service>
        </authentication-provider>
    </authentication-manager>-->



    <authentication-manager>
        <authentication-provider>
            <password-encoder hash="bcrypt" />

            <jdbc-user-service data-source-ref="miBaseDePatos" 
                               authorities-by-username-query="select Usuario.name, Role.name from Usuario
                                                              join Usuario_Role on Usuario.id = Usuario_Role.usuarios_id
                                                              join Role on Usuario_Role.roles_id = Role.id
                                                              where Usuario.name = ?" 
                               users-by-username-query="Select name, password, enabled from Usuario where name = ?" />
        </authentication-provider>
    </authentication-manager>
</beans:beans>